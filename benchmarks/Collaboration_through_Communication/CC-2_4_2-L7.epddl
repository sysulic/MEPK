(define (domain ctc2)
  
  (:objects
        b1
        b2 - block

        p1
        p2
        p3
        p4 - room
    )
    
    (:agents
        a
        b
    )

  (:predicates  (at ?ag - agent ?p - room)
                (in ?b - block ?p - room)
  )
   
  (:action left
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (not(at ?ag p1)) )
   :effect (<{(at ?ag p2)   }
             {(and (at ?ag p1) (not (at ?ag p2)) (not (at ?ag p3)) (not (at ?ag p4))
                  (K_?ag (and (at ?ag p1) (not (at ?ag p2)) (not (at ?ag p3)) (not (at ?ag p4)) )))} >
            <{(at ?ag p3) }
             {(and (at ?ag p2) (not (at ?ag p1)) (not (at ?ag p3)) (not (at ?ag p4))
                  (K_?ag (and (at ?ag p2) (not (at ?ag p1)) (not (at ?ag p3)) (not (at ?ag p4)) )))} >
            <{ (at ?ag p4 ) }
             {(and (at ?ag p3) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p4))
                  (K_?ag (and (at ?ag p3) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p4)) )))} >
    )
  )
  
  (:action right
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (not(at ?ag p3)) )
   :effect (<{(at ?ag p1) }
             {(and (at ?ag p2) (not (at ?ag p1)) (not (at ?ag p3)) (not (at ?ag p4))
                  (K_?ag (and (at ?ag p2) (not (at ?ag p1)) (not (at ?ag p3)) (not (at ?ag p4)) )))} >
            <{(at ?ag p2) }
             {(and (at ?ag p3) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p4))
                  (K_?ag (and (at ?ag p3) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p4)) )))} >
            <{(at ?ag p3) }
             {(and (at ?ag p4) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p3))
                  (K_?ag (and (at ?ag p4) (not (at ?ag p1)) (not (at ?ag p2)) (not (at ?ag p3)) )))} >
    )
  )

  (:action find_room1
   :category (ontic)
   :parameters (?ag - agent  )
   :precondition (K_?ag (at ?ag p1)
                 )
   :effect (< { (True) }   {  (or      (K_?ag ( and (not(in b1 p1))    (not(in b2 p1))    ) )       
                                                 (K_?ag ( and (in b1 p1)    (not(in b2 p1))    ) )    
                                                 (K_?ag ( and (in b2 p1)    (not(in b1 p1))     ) )      
                                                 (K_?ag ( and (in b1 p1)    (in b2 p1)     ) )    
                                                 (K_?ag ( and (not(in b1 p1))    (not(in b2 p1))     ) )       
                                                 (K_?ag ( and (in b1 p1)    (not(in b2 p1))     ) )    
                                                 (K_?ag ( and (in b2 p1)    (not(in b1 p1))     ) )      
                                                 (K_?ag ( and (in b1 p1)    (in b2 p1)    ) )    )
                                    } >
               )        
  )

  (:action find_room3
   :category (ontic)
   :parameters (?ag - agent  )
   :precondition (K_?ag (at ?ag p3)
                 )
   :effect (< { (True) }   {  (or      (K_?ag ( and (not(in b1 p3))    (not(in b2 p3))    ) )       
                                                 (K_?ag ( and (in b1 p3)    (not(in b2 p3))     ) )    
                                                 (K_?ag ( and (in b2 p3)    (not(in b1 p3))      ) )      
                                                 (K_?ag ( and (in b1 p3)    (in b2 p3)     ) )    
                                                 (K_?ag ( and (not(in b1 p3))    (not(in b2 p3))   ) )       
                                                 (K_?ag ( and (in b1 p3)    (not(in b2 p3))    ) )    
                                                 (K_?ag ( and (in b2 p3)    (not(in b1 p3))     ) )      
                                                 (K_?ag ( and (in b1 p3)    (in b2 p3)    ) )    )
                                    } >
               )        
  )

  (:action find_room4
   :category (ontic)
   :parameters (?ag - agent )
   :precondition (K_?ag (at ?ag p4)
                 )
   :effect (< { (True) }   { ( or      (K_?ag ( and (not(in b1 p4))    (not(in b2 p4))     ) )       
                                                 (K_?ag ( and (in b1 p4)    (not(in b2 p4))     ) )    
                                                 (K_?ag ( and (in b2 p4)    (not(in b1 p4))     ) )      
                                                 (K_?ag ( and (in b1 p4)    (in b2 p4)     ) )    
                                                 (K_?ag ( and (not(in b1 p4))    (not(in b2 p4))    ) )       
                                                 (K_?ag ( and (in b1 p4)    (not(in b2 p4))    ) )    
                                                 (K_?ag ( and (in b2 p4)    (not(in b1 p4))    ) )      
                                                 (K_?ag ( and (in b1 p4)    (in b2 p4)    ) )    )
                                    } >
               )        
  )



  (:action tell
   :category (communication)
   :parameters (?ag1 - agent ?ag2 - agent ?r - room)
   :precondition (or             (K_?ag1 (in b1 ?r))
                                 (K_?ag1 (not(in b1 ?r)))
                                 (K_?ag1 (in b2 ?r))
                                 (K_?ag1 (not(in b2 ?r)))
                               
                 )
   :effect (    <{ (or (K_?ag1 (in b1 ?r)) (K_?ag1 (not(in b1 ?r))) )} { (or (K_?ag2 (in b1 ?r)) (K_?ag2 (not(in b1 ?r)))) }>
                <{ (or (K_?ag1 (in b2 ?r)) (K_?ag1 (not(in b2 ?r)))) } { (or (K_?ag2 (in b2 ?r)) (K_?ag2 (not(in b2 ?r)))) }>
           ) 
  )

  (:init (and   (at a p2)
                (not (at a p1))
                (not (at a p3))
                (not (at a p4))
                (at b p2)
                (not (at b p1))
                (not (at b p3))
                (not (at b p4))
          
                (K_a (and (not (at a p1))
                          (at a p2)
                          (not (at a p3))
                          (not (at a p4))
                     )
                )
                (K_b (and (not (at b p1))
                          (at b p2)
                          (not (at a p3))
                          (not (at b p4))
                     )
                )
         )
  )

    (:constraint (and (or (and (in b1 p1) (not (in b1 p3)) (not (in b1 p4)) )
                          (and (not (in b1 p1)) (in b1 p3)  (not (in b1 p4)) )
                           (and (not (in b1 p1)) (in b1 p4)  (not (in b1 p3)) )
                      )
                      (or (and (in b2 p1) (not (in b2 p3)) (not (in b2 p4)) )
                          (and (not (in b2 p1)) (in b2 p3) (not (in b2 p4)) )
                          (and (not (in b2 p1)) (in b2 p4) (not (in b2 p3)) )
                      )
                    
                 )
    )
    
     (:goal (and (or (K_a (in b1 p1))
                     (K_a (in b1 p3))
                     (K_a (in b1 p4))
                     (K_a (not(in b1 p1)))
                     (K_a (not(in b1 p3)))
                     (K_a (not(in b1 p4)))
                 )         
                 (or (K_a (in b2 p1))                    
                     (K_a (in b2 p3))
                     (K_a (in b2 p4))
                     (K_a (not(in b2 p1)))
                     (K_a (not(in b2 p3)))
                     (K_a (not(in b2 p4)))
                 )
                 (or (K_b (in b1 p1))
                     (K_b (in b1 p3))
                     (K_b (in b1 p4))
                     (K_b (not(in b1 p1)))
                     (K_b (not(in b1 p3)))
                     (K_b (not(in b1 p4)))
                 )         
                 (or (K_b (in b2 p1))                    
                     (K_b (in b2 p3))
                     (K_b (in b2 p4))
                     (K_b (not(in b2 p1)))
                     (K_b (not(in b2 p3)))
                     (K_b (not(in b2 p4)))
                 ) 
            )
    )
)

(define (domain revision-1)

  (:objects
    b1 - block

    p1 p2 - room
  )
    
  (:agents
    a
  )

  (:predicates  (at ?ag - agent ?p - room)
                (in ?b - block ?p - room)
  )
   
  (:action left
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (not(at ?ag p1)) )
   :effect (<{(K_?ag (at ?ag p2)) }
             {(K_?ag (and (at ?ag p1) (not (at ?ag p2))))} >
           )
  )
  
  (:action right
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (not(at ?ag p2)) )
   :effect (<{(K_?ag (at ?ag p1)) }
             {(K_?ag (and (at ?ag p2) (not (at ?ag p1))))} >
           )
  )

  (:action check
   :category (sensing)
   :parameters (?ag - agent ?b - block ?r - room)
   :precondition (K_?ag (at ?ag ?r)
                 )
   :observe_pos (and (in ?b ?r) (K_?ag (in ?b ?r)))
   :observe_neg (and (not (in ?b ?r)) (K_?ag (not (in ?b ?r))))
  )

  (:init (and (in b1 p1)
              (K_a (and (at a p2)
                        (not (at a p1))
                        (in b1 p2)
                   )
              )
         )
  )

  (:constraint (or (and (in b1 p1) (not (in b1 p2)) )
                   (and (not (in b1 p1)) (in b1 p2) )
               )
  )
  
  (:goal (K_a (in b1 p1)
         )
  )
)

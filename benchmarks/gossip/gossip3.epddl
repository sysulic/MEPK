(define (domain gossip3)
  (:objects
   a
   b
   c - secret
  )
  (:agents
   a
   b
   c
  )
  (:predicates (the ?se - secret))
  (:action call
   :category (communication)
   :parameters (?ag1 - agent ?ag2 - agent ?ag3 - agent)
   :precondition (K_?ag1(and (the ?ag1) (not (K_?ag2 (the ?ag1))))
                 )
   :effect (<{(True)}
             {(and (K_?ag1 (the ?ag2)) (K_?ag2 (the ?ag1)))}>
            <{(K_?ag1 (the ?ag3))}
             {(K_?ag2 (the ?ag3))}>
            <{(K_?ag2 (the ?ag3))}
             {(K_?ag1 (the ?ag3))}>
           )
  )
  (:init (and (K_a (the a))
              (K_b (the b))
              (K_c (the c))
              (not (K_a (the b)))
              (not (K_a (the c)))
              (not (K_b (the a)))
              (not (K_b (the c)))
              (not (K_c (the a)))
              (not (K_c (the b)))
              (K_a (and (not (K_b (the a)))
                        (not (K_c (the a))) ))
              (K_b (and (not (K_a (the b)))
                        (not (K_c (the b))) ))
              (K_c (and (not (K_a (the c)))
                        (not (K_b (the c))) )) )
  )
  (:constraint (True))
  (:goal (and
            (K_a (and (the a) (the b) (the c) ))
            (K_b (and (the a) (the b) (the c) ))
            (K_c (and (the a) (the b) (the c) ))
  ))
)